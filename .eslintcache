[{"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\index.js":"1","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\App.js":"2","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\reportWebVitals.js":"3","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\HomePage.js":"4","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\RecipesPage.js":"5","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Login.js":"6","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Signup.js":"7","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\components\\RecipesNavbar.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1626,"mtime":1620632549642,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":286,"mtime":1620629941549,"results":"13","hashOfConfig":"10"},{"size":322,"mtime":1620629638704,"results":"14","hashOfConfig":"10"},{"size":274,"mtime":1620629551741,"results":"15","hashOfConfig":"10"},{"size":278,"mtime":1620629525557,"results":"16","hashOfConfig":"10"},{"size":1263,"mtime":1620632678197,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18yxomo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\index.js",[],["39","40"],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\App.js",[],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\reportWebVitals.js",[],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\HomePage.js",["41","42"],"import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport RecipesNavbar from '../components/RecipesNavbar';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return <Jumbotron>Welcome to the homepage</Jumbotron>\r\n    }\r\n}\r\nexport default HomePage;","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\RecipesPage.js",["43","44"],"import React from 'react';\r\nimport { Button, Row, Jumbotron, Modal, Form } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './RecipesPage.css'\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport PieChart from '../components/PieChart';\r\nclass RecipesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recipeName: '',\r\n            recipeDesc: '',\r\n            recipeImg: '',\r\n            recipeDifficulty: 1,\r\n            isModalActive: false,\r\n            animationIndex: 0,\r\n        }\r\n    }\r\n    openModal = () => {\r\n        this.setState({isModalActive: true});\r\n    }\r\n    \r\n    closeModal = () => {\r\n        this.setState({isModalActive: false});\r\n    }\r\n    handleNewRecipe = () => {\r\n        const newRecipe = {\r\n            name: this.state.recipeName,\r\n            desc: this.state.recipeDesc,\r\n            img: this.state.recipeImg,\r\n            difficulty: 2,\r\n            userId: this.props.activeUser.id,\r\n            id: this.props.allRecipes.length + 1\r\n        }\r\n\r\n        this.closeModal();\r\n        this.props.addRecipe(newRecipe);\r\n        this.setState({\r\n            recipeName: '',\r\n            recipeDesc: '',\r\n            recipeImg: '',\r\n            recipeDifficulty: 1,\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        for(let i = 0; i<this.props.allRecipes.length; i++) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    animationIndex: i,\r\n                })\r\n            }, (i * 1 * 1000));\r\n        }\r\n\r\n    }\r\n    render() {\r\n        \r\n        if( ! this.props.activeUser){\r\n            return <Redirect push to=\"/login\" />\r\n        }\r\n        const filteredRecipes = this.props.allRecipes.filter( (recipe) => {  // immutable - the original array is not changed\r\n            return this.props.activeUser.id === recipe.userId;\r\n        })\r\n\r\n\r\n        \r\n        const easyRecipes = filteredRecipes.filter(recipe => recipe.difficulty === 1).length;\r\n        const difficultRecipes = filteredRecipes.filter(recipe => recipe.difficulty === 2).length;\r\n        \r\n        \r\n        const recipeElements = filteredRecipes.map((recipe, index) => {\r\n\r\n            return (<RecipeCard key={recipe.id} name={recipe.name} img={recipe.img} desc={recipe.desc}/>);\r\n        })\r\n \r\n        const data = {\r\n            labels: [\r\n                'Easy',\r\n                'Difficult',\r\n            ],\r\n            datasets: [{\r\n                data: [easyRecipes, difficultRecipes],\r\n                backgroundColor: [\r\n                '#36A2EB',\r\n                '#FF6384',\r\n\r\n\r\n                ],\r\n                hoverBackgroundColor: [\r\n                '#36A2EB',\r\n                '#FF6384',\r\n                ]\r\n            }]\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"c-recipes-page\">\r\n                <Jumbotron>\r\n                <h1 className=\"text-center\">Recipes by {this.props.activeUser.fname}</h1>\r\n                <Button className=\"ml-auto\" onClick={this.openModal}> Add Recipe</Button>\r\n                </Jumbotron>\r\n                <Row className=\"justify-content-between\">\r\n                \r\n                {recipeElements}\r\n                </Row>\r\n\r\n                <div>\r\n                  {/* <PieChart data={data} /> */}\r\n                </div>\r\n                <Modal show={this.state.isModalActive} onHide={()=>{this.setState({isModalActive: false})}}>\r\n                            <Modal.Header closeButton>\r\n                            <Modal.Title>Add recipe</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                            <Form>\r\n                       \r\n                        <Form.Label>Recipe name</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        onChange={(event) => {this.setState({recipeName: event.target.value})}} \r\n                        placeholder=\"\" value={this.state.recipeName} />\r\n                                                \r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        onChange={(event) => {this.setState({recipeDesc: event.target.value})}} \r\n                        placeholder=\"\" value={this.state.recipeDesc} />\r\n                        \r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control type=\"text\" \r\n                        onChange={(event) => {this.setState({recipeImg: event.target.value})}} \r\n                        placeholder=\"\" \r\n                        value={this.state.recipeImg} />\r\n\r\n                        <Form.Label>Difficulty</Form.Label>\r\n                        <Form.Control \r\n                        value={this.state.recipeDifficulty} \r\n                        onChange={(event) => {\r\n                            this.setState({recipeDifficulty: event.target.value})\r\n                        }} \r\n                        as=\"select\" custom>\r\n                            <option value=\"1\">Easy</option>\r\n                            <option value=\"2\">Difficult</option>\r\n                        </Form.Control>\r\n\r\n                    </Form> \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                    <Button variant=\"primary\" onClick={this.handleNewRecipe}>\r\n                        Save New recipe\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RecipesPage;","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Login.js",["45"],"import  React from 'react'\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return (\r\n        <div className=\"p-login\">\r\n            I am Login\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Signup.js",["46"],"import  React from 'react'\r\n\r\nclass Signup extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return (\r\n        <div className=\"p-signup\">\r\n            I am signup\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\components\\RecipesNavbar.js",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":6,"column":5,"nodeType":"59","messageId":"60","endLine":8,"endColumn":6},{"ruleId":"53","severity":1,"message":"61","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":16},{"ruleId":"53","severity":1,"message":"62","line":75,"column":15,"nodeType":"55","messageId":"56","endLine":75,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":4,"column":5,"nodeType":"59","messageId":"60","endLine":6,"endColumn":6},{"ruleId":"57","severity":1,"message":"58","line":4,"column":5,"nodeType":"59","messageId":"60","endLine":6,"endColumn":6},{"ruleId":"53","severity":1,"message":"63","line":2,"column":23,"nodeType":"55","messageId":"56","endLine":2,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":6,"column":5,"nodeType":"59","messageId":"60","endLine":9,"endColumn":6},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'RecipesNavbar' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'PieChart' is defined but never used.","'data' is assigned a value but never used.","'NavDropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]