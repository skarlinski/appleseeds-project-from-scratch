[{"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\index.js":"1","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\App.js":"2","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\reportWebVitals.js":"3","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\HomePage.js":"4","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\RecipesPage.js":"5","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Login.js":"6","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Signup.js":"7","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\components\\RecipesNavbar.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3732,"mtime":1620647348508,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":286,"mtime":1620629941549,"results":"13","hashOfConfig":"10"},{"size":3975,"mtime":1620645007564,"results":"14","hashOfConfig":"10"},{"size":2782,"mtime":1620639660022,"results":"15","hashOfConfig":"10"},{"size":1174,"mtime":1620641451950,"results":"16","hashOfConfig":"10"},{"size":1630,"mtime":1620634729101,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18yxomo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\index.js",[],["38","39"],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\App.js",[],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\reportWebVitals.js",[],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\HomePage.js",["40","41"],"import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport RecipesNavbar from '../components/RecipesNavbar';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return <Jumbotron>Welcome to the homepage</Jumbotron>\r\n    }\r\n}\r\nexport default HomePage;","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\RecipesPage.js",["42","43","44"],"\r\nimport  React from 'react';\r\nimport { Button, Col, Form, Jumbotron, Modal, Row } from 'react-bootstrap';\r\nimport './RecipesPage.css';\r\nclass RecipesPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            recipeName: '',\r\n            recipeDesc: '',\r\n            recipeImg: ''\r\n        }\r\n    }\r\n    getActiveRecipes = ()=>{\r\n        console.log( this.props.allRecipes);\r\n        const active = this.props.allRecipes.filter((recipe) => {\r\n            if(this.props.activeUser.id == recipe.userId ){\r\n                return true;\r\n            }\r\n        })\r\n        return active;\r\n    }\r\n    handleClose = () =>{\r\n        this.setState({\r\n            isModalOpen: false,\r\n        })\r\n    }\r\n    saveModalInfo = () =>{\r\n\r\n        // TODO: Make sure the recipe has all the needed fields\r\n        const newRecipe = {\r\n            name: this.state.recipeName,\r\n            desc: this.state.recipeDesc,\r\n            img: this.state.recipeImg,\r\n            userId: this.props.activeUser.id,\r\n        }\r\n        this.props.addRecipe(newRecipe);\r\n\r\n    }\r\n    render(){\r\n        if(  ! this.props.activeUser) {\r\n            window.location.href = \"/#/login\";\r\n            return null;\r\n        }\r\n        const filteredRecipes = this.getActiveRecipes();\r\n        const recipesCards = filteredRecipes.map(recipe => {\r\n            return (<div>\r\n                <img src={recipe.img}/>\r\n                <h2>{recipe.name}</h2>\r\n            <p>{recipe.desc}</p></div>)\r\n        })\r\n        return (\r\n        <div className=\"p-recipes\">\r\n            \r\n            <Jumbotron>\r\n                <h1>{this.props.activeUser.name}'s recipes</h1>\r\n            </Jumbotron>\r\n            <div className=\"d-flex \">\r\n                {recipesCards}\r\n           </div>\r\n            <Button onClick={()=>{this.setState({isModalOpen:true})}}>Add recipe</Button>\r\n          \r\n           <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Add Recipe</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n  \r\n\r\n            <Form.Group as={Row} >\r\n                <Form.Label column sm={2}>\r\n                Name:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Recipe Name\"\r\n                     value={this.state.recipeName}\r\n                     onChange={(event)=> {this.setState({recipeName: event.target.value})}}\r\n                      />\r\n                </Col>\r\n\r\n                <Form.Label column sm={2}>\r\n                Description:\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Form.Control type=\"text\" placeholder=\"Recipe Description\"\r\n                    value={this.state.recipeDesc}\r\n                    onChange={(event)=> {this.setState({recipeDesc: event.target.value})}}\r\n                  />\r\n                </Col>\r\n                <Col sm={10}>\r\n                    <Form.Label column sm={2}>\r\n                    Image:\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\"\r\n                    placeholder=\"Recipe image\"  \r\n                    value={this.state.recipeImg}\r\n                    onChange={(event)=> {this.setState({recipeImg: event.target.value})}}\r\n                    />\r\n                </Col>\r\n                \r\n                \r\n            </Form.Group>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.saveModalInfo}>\r\n                Save Changes\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipesPage;","C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Login.js",[],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\pages\\Signup.js",[],"C:\\appleseeds\\lesson32\\project-from-scratch\\src\\components\\RecipesNavbar.js",["45","46"],"import React from 'react'\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\n\r\n\r\nclass RecipesNavbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n    render(){\r\n        // Show the user managment links conditionally:\r\n        // If activeUser exists, then a user is logged in\r\n        // If activeUser Does not exist - Render login + signup\r\n        // If activeUser exists - Render si\r\n        const loginEl = ( ! this.props.activeUser) ? <Nav.Link href=\"/#/login\">Login</Nav.Link> : null\r\n        const signupEl = ( ! this.props.activeUser) ? <Nav.Link href=\"/#/signup\">Signup</Nav.Link> : null\r\n        const nameEl = (this.props.activeUser) ? <Nav.Link>Hello {this.props.activeUser.name}</Nav.Link> : null\r\n        const logoutEl = (this.props.activeUser) ?  \r\n        <Nav.Link href=\"/#/\" onClick={ () => this.props.logout()}>\r\n            Log out\r\n        </Nav.Link>\r\n        : null\r\n\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/#/\">My Recipe Book</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/#/recipes\">Recipes</Nav.Link>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    {loginEl}\r\n                    {signupEl}\r\n                    {logoutEl}\r\n                    {nameEl}\r\n                </Nav>\r\n\r\n\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default RecipesNavbar;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":6,"column":5,"nodeType":"57","messageId":"58","endLine":8,"endColumn":6},{"ruleId":"59","severity":1,"message":"60","line":17,"column":62,"nodeType":"61","messageId":"62","endLine":17,"endColumn":64},{"ruleId":"63","severity":1,"message":"64","line":18,"column":41,"nodeType":"65","messageId":"66","endLine":18,"endColumn":43},{"ruleId":"67","severity":1,"message":"68","line":49,"column":17,"nodeType":"69","endLine":49,"endColumn":40},{"ruleId":"51","severity":1,"message":"70","line":2,"column":23,"nodeType":"53","messageId":"54","endLine":2,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":6,"column":5,"nodeType":"57","messageId":"58","endLine":9,"endColumn":6},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'RecipesNavbar' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavDropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]